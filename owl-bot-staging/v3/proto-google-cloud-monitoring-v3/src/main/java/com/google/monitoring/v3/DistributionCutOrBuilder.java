// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/monitoring/v3/service.proto

package com.google.monitoring.v3;

public interface DistributionCutOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.monitoring.v3.DistributionCut)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
   * specifying a `TimeSeries` aggregating values. Must have `ValueType =
   * DISTRIBUTION` and `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
   * </pre>
   *
   * <code>string distribution_filter = 4;</code>
   * @return The distributionFilter.
   */
  java.lang.String getDistributionFilter();
  /**
   * <pre>
   * A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
   * specifying a `TimeSeries` aggregating values. Must have `ValueType =
   * DISTRIBUTION` and `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
   * </pre>
   *
   * <code>string distribution_filter = 4;</code>
   * @return The bytes for distributionFilter.
   */
  com.google.protobuf.ByteString
      getDistributionFilterBytes();

  /**
   * <pre>
   * Range of values considered "good." For a one-sided range, set one bound to
   * an infinite value.
   * </pre>
   *
   * <code>.google.monitoring.v3.Range range = 5;</code>
   * @return Whether the range field is set.
   */
  boolean hasRange();
  /**
   * <pre>
   * Range of values considered "good." For a one-sided range, set one bound to
   * an infinite value.
   * </pre>
   *
   * <code>.google.monitoring.v3.Range range = 5;</code>
   * @return The range.
   */
  com.google.monitoring.v3.Range getRange();
  /**
   * <pre>
   * Range of values considered "good." For a one-sided range, set one bound to
   * an infinite value.
   * </pre>
   *
   * <code>.google.monitoring.v3.Range range = 5;</code>
   */
  com.google.monitoring.v3.RangeOrBuilder getRangeOrBuilder();
}
